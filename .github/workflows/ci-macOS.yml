name: MacOS CI

on:
  workflow_call:
    inputs:
      os:
        default: '["macos-13", "macos-14", "macos-latest"]'
        description: 'The macOS versions to execute the job on'
        required: false
        type: string
      build_modes:
        default: '["debug", "release"]'
        description: 'The build modes to execute the job on'
        required: false
        type: string
      swift_versions:
        default: '["6.0", "5.10", "5.9", "5.8", "5.7"]'
        description: 'The swift versions to execute the job on'
        required: false
        type: string
    secrets:
      SSH_PRIVATE_KEY:
        required: true

jobs:
  build_macos:
    strategy:
      matrix:
        os: ${{ fromJSON(inputs.os) }}
        build_mode: ${{ fromJSON(inputs.build_modes) }}
        swift_version: ${{ fromJSON(inputs.swift_versions) }}
    name: Swift ${{ matrix.swift_version }} ${{ matrix.build_mode }} CI for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: swift-actions/setup-swift@v2
        with:
          swift-version: ${{ matrix.swift_version }}
      #- name: Install guunits
      #  uses: mipalgu/install-guunits@main

      - name: Setup SSH Key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Checkout repo
        uses: actions/checkout@v4
      
      #- name: Reconfigure Private Repo URLs
      #  run: sed -i 's/git@github.com:/https:\/\/${{ secrets.ACCESS_TOKEN }}@github.com\//g' Package.swift

      - name: build
        run: swift build -c ${{ matrix.build_mode }}

      - name: Test
        run: swift test -c ${{ matrix.build_mode }}
  ci-macos-report:
    runs-on: ubuntu-latest
    needs: build_macos
    if: always()
    steps:
      - name: All tests ok
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: Some tests failed
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
